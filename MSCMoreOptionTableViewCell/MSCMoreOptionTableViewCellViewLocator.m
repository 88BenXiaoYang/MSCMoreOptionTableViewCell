//
// Created by Robert Gilliam on 1/17/14.
// Copyright (c) 2014 Manfred Scheiner. All rights reserved.
//

#import "MSCMoreOptionTableViewCellViewLocator.h"
#import "MSCMoreOptionTableViewCell.h"


@implementation MSCMoreOptionTableViewCellViewLocator {
    UIScrollView *_cellScrollView;
}
- (instancetype)initWithCell:(MSCMoreOptionTableViewCell *)cell
{
    self = [super init];
    if (self) {
        self.cell = cell;
        _cellScrollView = [self findScrollView]; // in cell as implicit param!
    }

    return self;
}

- (UIView *)deleteConfirmationView
{
    CALayer *swipeToDeleteLayer = [self swipeToDeleteLayer];
    return swipeToDeleteLayer.delegate;
}

- (CALayer *)swipeToDeleteLayer
{
    CALayer *cellScrollViewLayer = _cellScrollView.layer;
    return [self findSwipeToDeleteLayerInScrollViewLayer:cellScrollViewLayer];
}

- (CALayer *)findSwipeToDeleteLayerInScrollViewLayer:(CALayer *)scrollViewLayer
{
    for (CALayer *layer in [scrollViewLayer sublayers]) {
        NSString *className = NSStringFromClass([layer.delegate class]);
        if ([className hasPrefix:@"UI"] && [className hasSuffix:@"ConfirmationView"]) {
            return layer;
        }
    }

    return nil;
}

- (UIScrollView *)findScrollView
{
    /*
     * Look for UITableViewCell's scrollView.
     * Any CALayer found here can only be generated by UITableViewCell's
     * 'initWithStyle:reuseIdentifier:', so there is no way adding custom
     * sublayers before. This means custom sublayers are no problem and
     * don't break MSCMoreOptionTableViewCell's functionality.
    */

    for (CALayer *layer in _cell.layer.sublayers) {
        if ([layer.delegate isKindOfClass:[UIScrollView class]]) {
            return (UIScrollView *)layer.delegate;
        }
    }

    return nil;
}

- (UILabel *)deleteButtonLabel
{
    for (UIView *view in [[self deleteConfirmationButton] subviews]) {
        if ([view isKindOfClass:[UILabel class]]) {
            return view;
        }
    }

    return nil;
}

- (UIButton *)deleteConfirmationButton
{
    for (UIButton *deleteConfirmationButton in [self deleteConfirmationView].subviews) {
        NSString *name = NSStringFromClass([deleteConfirmationButton class]);
        if ([name hasPrefix:@"UI"] && [name rangeOfString:@"Delete"].length > 0 && [name hasSuffix:@"Button"]) {
            return deleteConfirmationButton;
        }
    }
    return nil;
}

- (UITableView *)tableView
{
    UIView *superview = self.cell.superview;
    while(superview) {
        if([superview isKindOfClass:[UITableView class]]) {
            return (UITableView *)superview;
        }else{
            superview = superview.superview;
        }
    }

    return nil;
}

@end